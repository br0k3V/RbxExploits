-- Gui to Lua
-- Version: 3.2

-- Instances:

local loader = Instance.new("ScreenGui")
local Splash = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local Logo = Instance.new("Folder")
local TextLabel_2 = Instance.new("TextLabel")
local TextLabel_3 = Instance.new("TextLabel")
local TextLabel_4 = Instance.new("TextLabel")
local TextLabel_5 = Instance.new("TextLabel")
local gameCheck = Instance.new("TextLabel")
local e = Instance.new("TextLabel")

--Properties:

loader.Name = "loader"
loader.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
loader.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Splash.Name = "Splash"
Splash.Parent = loader
Splash.AnchorPoint = Vector2.new(0.5, 0.5)
Splash.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Splash.BorderColor3 = Color3.fromRGB(0, 0, 0)
Splash.BorderSizePixel = 0
Splash.Position = UDim2.new(0.5, 0, 0.5, 0)
Splash.Size = UDim2.new(0, 704, 0, 377)

UICorner.Parent = Splash

TextLabel.Parent = Splash
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.350852281, 0, 0.427055717, 0)
TextLabel.Size = UDim2.new(0, 265, 0, 54)
TextLabel.Font = Enum.Font.Gotham
TextLabel.Text = "broke hub"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

Logo.Name = "Logo"
Logo.Parent = Splash

TextLabel_2.Parent = Logo
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.303977281, 0, 0.456233412, 0)
TextLabel_2.Size = UDim2.new(0, 25, 0, 33)
TextLabel_2.Font = Enum.Font.GothamBold
TextLabel_2.Text = "/"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14.000
TextLabel_2.TextWrapped = true

TextLabel_3.Parent = Logo
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Position = UDim2.new(0.303977281, 0, 0.514588833, 0)
TextLabel_3.Size = UDim2.new(0, 25, 0, 33)
TextLabel_3.Font = Enum.Font.GothamBold
TextLabel_3.Text = "/"
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 14.000
TextLabel_3.TextWrapped = true

TextLabel_4.Parent = Logo
TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.BorderSizePixel = 0
TextLabel_4.Position = UDim2.new(0.303977281, 0, 0.395225465, 0)
TextLabel_4.Size = UDim2.new(0, 25, 0, 33)
TextLabel_4.Font = Enum.Font.GothamBold
TextLabel_4.Text = "/"
TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.TextScaled = true
TextLabel_4.TextSize = 14.000
TextLabel_4.TextWrapped = true

TextLabel_5.Parent = Splash
TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.BackgroundTransparency = 1.000
TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_5.BorderSizePixel = 0
TextLabel_5.Position = UDim2.new(0.0241477266, 0, 0.912466824, 0)
TextLabel_5.Size = UDim2.new(0, 59, 0, 22)
TextLabel_5.Font = Enum.Font.Gotham
TextLabel_5.Text = "v2.00"
TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.TextScaled = true
TextLabel_5.TextSize = 14.000
TextLabel_5.TextWrapped = true

gameCheck.Name = "gameCheck"
gameCheck.Parent = Splash
gameCheck.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
gameCheck.BackgroundTransparency = 1.000
gameCheck.BorderColor3 = Color3.fromRGB(0, 0, 0)
gameCheck.BorderSizePixel = 0
gameCheck.Position = UDim2.new(0.0241477266, 0, 0.0450928397, 0)
gameCheck.Size = UDim2.new(0, 677, 0, 14)
gameCheck.Font = Enum.Font.Gotham
gameCheck.Text = "checking game id.."
gameCheck.TextColor3 = Color3.fromRGB(255, 255, 255)
gameCheck.TextScaled = true
gameCheck.TextSize = 14.000
gameCheck.TextWrapped = true
gameCheck.TextXAlignment = Enum.TextXAlignment.Left

e.Name = "e"
e.Parent = Splash
e.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
e.BackgroundTransparency = 1.000
e.BorderColor3 = Color3.fromRGB(0, 0, 0)
e.BorderSizePixel = 0
e.Position = UDim2.new(0.372159094, 0, 0.546419084, 0)
e.Size = UDim2.new(0, 250, 0, 21)
e.Font = Enum.Font.Gotham
e.Text = "loader"
e.TextColor3 = Color3.fromRGB(255, 255, 255)
e.TextScaled = true
e.TextSize = 14.000
e.TextWrapped = true
e.TextXAlignment = Enum.TextXAlignment.Left

-- Module Scripts:

local fake_module_scripts = {}

do -- loader.DraggableObject
	local script = Instance.new('ModuleScript', loader)
	script.Name = "DraggableObject"
	local function module_script()
		--[[
			@Author: Spynaz
			@Description: Enables dragging on GuiObjects. Supports both mouse and touch.
			
			For instructions on how to use this module, go to this link:
			https://devforum.roblox.com/t/simple-module-for-creating-draggable-gui-elements/230678
		--]]
		
		local UDim2_new = UDim2.new
		
		local UserInputService = game:GetService("UserInputService")
		
		local DraggableObject 		= {}
		DraggableObject.__index 	= DraggableObject
		
		-- Sets up a new draggable object
		function DraggableObject.new(Object)
			local self 			= {}
			self.Object			= Object
			self.DragStarted	= nil
			self.DragEnded		= nil
			self.Dragged		= nil
			self.Dragging		= false
			
			setmetatable(self, DraggableObject)
			
			return self
		end
		
		-- Enables dragging
		function DraggableObject:Enable()
			local object			= self.Object
			local dragInput			= nil
			local dragStart			= nil
			local startPos			= nil
			local preparingToDrag	= false
			
			-- Updates the element
			local function update(input)
				local delta 		= input.Position - dragStart
				local newPosition	= UDim2_new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				object.Position 	= newPosition
			
				return newPosition
			end
			
			self.InputBegan = object.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					preparingToDrag = true
					--[[if self.DragStarted then
						self.DragStarted()
					end
					
					dragging	 	= true
					dragStart 		= input.Position
					startPos 		= Element.Position
					--]]
					
					local connection 
					connection = input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End and (self.Dragging or preparingToDrag) then
							self.Dragging = false
							connection:Disconnect()
							
							if self.DragEnded and not preparingToDrag then
								self.DragEnded()
							end
							
							preparingToDrag = false
						end
					end)
				end
			end)
			
			self.InputChanged = object.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			
			self.InputChanged2 = UserInputService.InputChanged:Connect(function(input)
				if object.Parent == nil then
					self:Disable()
					return
				end
				
				if preparingToDrag then
					preparingToDrag = false
					
					if self.DragStarted then
						self.DragStarted()
					end
					
					self.Dragging	= true
					dragStart 		= input.Position
					startPos 		= object.Position
				end
				
				if input == dragInput and self.Dragging then
					local newPosition = update(input)
					
					if self.Dragged then
						self.Dragged(newPosition)
					end
				end
			end)
		end
		
		-- Disables dragging
		function DraggableObject:Disable()
			self.InputBegan:Disconnect()
			self.InputChanged:Disconnect()
			self.InputChanged2:Disconnect()
			
			if self.Dragging then
				self.Dragging = false
				
				if self.DragEnded then
					self.DragEnded()
				end
			end
		end
		
		return DraggableObject
		
	end
	fake_module_scripts[script] = module_script
end


-- Scripts:

local function NRTFJY_fake_script() -- Splash.Script 
	local script = Instance.new('Script', Splash)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local placeId = game.PlaceId
	local DraggableObject	= require(script.Parent.DraggableObject)
	local FrameDrag 		= DraggableObject.new(script.Parent)
	FrameDrag:Enable()
	
	if placeId == 2753915549 then
		script.Parent.gameCheck.Text = "supported game detected: Blox Fruits"
		wait(3)
		
		script.Parent.Visible = false
	else
		script.Parent.gameCheck.Text = "this game isn't supported!"
		script.Parent.Visible = false
	end
	if placeId == 6516141723 then
		script.Parent.gameCheck.Text = "supported game detected: DOORS"
		wait(3)
		
		script.Parent.Visible = false
	else
		script.Parent.gameCheck.Text = "this game isn't supported!"
		script.Parent.Visible = false
	end
end
coroutine.wrap(NRTFJY_fake_script)()
